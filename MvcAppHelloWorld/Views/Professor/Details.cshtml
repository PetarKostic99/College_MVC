@model ProfessorViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

@using (Html.BeginForm("EditDetails", "Professor", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.Partial("_Edit", Model)
        <div class="form-group">
            @Html.LabelFor(model => model.Cabinet, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Cabinet, Model.ReadOnly == true ? (object)new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cabinet, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ClassSubject, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ClassSubject, Model.ReadOnly == true ? (object)new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassSubject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" @Model.Disabled />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.UserId }, new { @class = "btn btn-primary btn-sm" })
    @Html.ActionLink("Back to List", "Index", "College", new { @class = "btn btn-primary btn-sm" })
    @Html.ActionLink("Download Details", "Export", new { id = Model.UserId }, new { @class = "btn btn-primary btn-sm" })
    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#exampleModal">
        Delete
    </button>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
